name: Build and Release on Commit

on: push

jobs:
  build-and-release:
    name: Build and Upload Artifacts
    runs-on: windows-latest  # Use Windows runner
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the project
      - name: Build all components
        run: |
          powershell -Command "chmod +x ./build.sh"
          bash ./build.sh prod

      # Step 5: Prepare artifacts for release
      - name: Create Release Artifacts
        run: |
          mkdir -p builds
          
          # Browser extension artifacts
          cp -r browser-extension/mv3/dist builds/mv3-dist
          cp -r browser-extension/mv2/dist builds/mv2-dist
          
          # React app artifacts
          cp -r app/dist builds/app-dist
          
          # Zip artifacts
          cd builds
          tar -czvf mv3-dist.tar.gz mv3-dist
          tar -czvf mv2-dist.tar.gz mv2-dist
          tar -czvf app-dist.tar.gz app-dist

      # Step 6: Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}  # Use run ID as the tag
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false

      # Step 7: Upload MV3 artifact
      - name: Upload MV3 Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/mv3-dist.tar.gz
          asset_name: mv3-dist.tar.gzâ–Œ
