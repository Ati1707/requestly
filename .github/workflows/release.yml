name: Build and Release

on: push

jobs:
  build-and-release:
    name: Build and Create Release Artifacts
    runs-on: ubuntu-latest  # Using ubuntu since build scripts are in bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
      
      - name: Build all components
        run: |
           chmod +x ./build.sh
           ./build.sh prod

      - name: Create Release Artifacts
        run: |
          #Create a folder with name build for storing artifacts
          mkdir builds
          
          # Create browser extension artifacts
          cp -r browser-extension/mv3/dist builds/mv3-dist
          cp -r browser-extension/mv2/dist builds/mv2-dist
          
          # Create react app artifacts
          cp -r app/dist builds/app-dist

          # zip the artifacts
          cd builds
          zip -r mv3-dist.zip mv3-dist
          zip -r mv2-dist.zip mv2-dist
          zip -r app-dist.zip app-dist
          

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}  # Using the run ID as a unique tag
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/mv3-dist.zip
          asset_name: mv3-dist.zip
          asset_content_type: application/zip
      
      - name: Upload Release Artifacts MV2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/mv2-dist.zip
          asset_name: mv2-dist.zip
          asset_content_type: application/zip
      
      - name: Upload Release Artifacts App
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/app-dist.zip
          asset_name: app-dist.zip
          asset_content_type: application/zip
